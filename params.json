{"name":"Mocasinns","tagline":"MOnte-CArlo-SImulations - Neat'N'Simple","body":"### Generic Monte-Carlo simulations\r\nThe generic template library `mocasinns` is a user-friendly framework for using various Monte-Carlo algorithm on user defined systems. It integrates the simulations, storage and analysis of the data. Included in the mocasinns package is the include library `gespinst` for simulating arbitrary configurations of spin systems.\r\n\r\n### What works?\r\n* Metropolis algorithm\r\n* Entropic sampling\r\n* Wang-Landau simulations\r\n* Optimal ensemble sampling\r\n* Simple analysis tools (e.g. Jackknife and Bootstrap)\r\n* Basic templates for usage in user code (observables with several components etc.)\r\n\r\n### What's to come?\r\n* Parallel Tempering\r\n* Simulated Annealing\r\n* Rejection-free / continous-time algorithms\r\n* Framework to organize and store simulation parameters and results\r\n* A more sophisticated analysis framework\r\n* Python interface\r\nThe contributors are happy for hints about other algorithms or modifications of existing algorithms that can be implemented in mocasinns, as well as other analysis methods.\r\n\r\n### Which projects use mocasinns?\r\nThe following projects are using mocasinns at present:\r\n* `gespinst`: GEneralized SPIn Network Toolkit, generic library for simulating arbitrary spin configurations like Ising model on various networks. This library is packaged with mocasinns and is used by mocasinns for testing\r\n* `hasi-geco`: HArd Spheres In GEometrical COnfinement\r\n* `mocatie`: MOnte-CArlo Take It Easy (a popular german board game)\r\nIf you want your own project using mocasinns listed here or if you know about another project using mocasinns, please feel free to contact the authors. We then will update the list.\r\n\r\n### Authors and Contributors\r\n* Benedikt Kr√ºger (@bkrueger)\r\n* Johannes F. Knauf (@SpeckFleck)\r\n\r\n### Support or Contact\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}